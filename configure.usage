Usage: configure [--OPTION[=VALUE] ...] [CONFIGURATION]

Set compilation and installation parameters for XEmacs, and report.

Note that for most of the following options, you can explicitly enable
them using `--OPTION=yes' and explicitly disable them using `--OPTION=no'.  
This is especially useful for auto-detected options.
The option `--without-FEATURE' is a synonym for `--with-FEATURE=no'.

Options marked with a (*) are auto-detected.

Use colons (or quoted spaces) to separate directory names in option
values which are PATHs (i.e. lists of directories).

General options:

--help			Issue this usage message.
--verbose		Display the results of configure tests.
--extra-verbose		Display even more information, useful for debugging.


Compilation options:

--compiler=prog		C compiler to use.
--with-gcc (*)		Use GCC to compile XEmacs.
--without-gcc		Don't use GCC to compile XEmacs.
--with-gnu-make		Write the Makefiles to take advantage of
			special features of GNU Make. (GNU Make
			works fine on the Makefiles even without this
			option.  This just allows for simultaneous
			in-place and --srcdir building.)
--cflags=FLAGS		Compiler flags (such as -O)
--cpp=prog		C preprocessor to use (e.g. /usr/ccs/lib/cpp or cc -E)
--cppflags=FLAGS	C preprocessor flags (e.g. -I/foo or -Dfoo=bar)
--libs=LIBS		Additional libraries (e.g. -lfoo)
--ldflags=FLAGS		Additional linker flags (e.g. -L/foo)
--site-includes=PATH	List of directories to search first for header files.
--site-libraries=PATH	List of directories to search first for libraries.
--site-prefixes=PATH    List of directories to search for include/ and lib/
                        subdirectories, just after 'site-includes' and
                        'site-libraries'.
--site-runtime-libraries=PATH
			List of ALL directories to search for dynamically
			linked libraries at run time.
--dynamic=yes		Link dynamically if supported by system.
--dynamic=no		Force static linking on systems where dynamic
			linking is the default.
--srcdir=DIR		Look for the XEmacs source files in DIR.
			See also --with-gnu-make.
--use-indexed-lrecord-implementation
--use-minimal-tagbits
--gung-ho		Build with new-style Lisp_Objects.
			Equivalent to both of the 2 previous options combined.


Installation options:

--prefix=DIR		Install files below DIR.  Defaults to `/usr/local'.


Window-system options:

--with-x11 (*)		Support the X Window System.
--without-x11		Don't support X.
--x-includes=DIR 	Search for X header files in DIR.
--x-libraries=DIR	Search for X libraries in DIR.
--without-toolbars	Don't compile with any toolbar support.
--without-session	Compile without realized leader window which will
			keep the WM_COMMAND property. Required for proper
			session-management.
--with-menubars=TYPE	Use TYPE menubars (lucid, motif, or no).  The Lucid
			widgets emulate Motif (mostly) but are faster.
			*WARNING*  The Motif menubar is currently broken.
--with-scrollbars=TYPE	Use TYPE scrollbars
			(lucid, motif, athena, athena3d, or no).
--with-dialogs=TYPE	Use TYPE dialog boxes (motif, athena, athena3d, or no).
			Lucid menubars and scrollbars are the default.
			Motif dialog boxes will be used if Motif can be found.
--with-dragndrop (*)	Compile in the generic drag and drop API. This is
			automatically added if one of the drag and drop
			protocols is found (currently CDE, OffiX, MSWindows).
			*WARNING*  The Drag'n'drop support is under development
				   and is considered experimental.
--with-cde (*)		Compile in support for CDE drag and drop.
--with-offix (*)	Compile in support for OffiX drag and drop.
			*WARNING*  If you compile in OffiX, you may not be
				   able to use multiple X displays success-
				   fully.  If the two servers are from
				   different vendors, the results may be
				   unpredictable.
--without-xmu (*)	For those unfortunates whose vendors don't ship Xmu.
--external-widget	Compile with external widget support.
--with-xpm (*)		Compile with support for XPM files.
			It is highly recommended that you obtain XPM
			(version 3.4h or better) if you don't already
			have it.  Get it from the XEmacs FTP site.
--with-xface (*)	Compile with support for X-Face mail header
	  		conversion.  Requires the compface library.
			Get it from the XEmacs FTP site.
--without-gif		Compile without the built-in support for GIF image
			conversion.
--with-jpeg (*)		Compile with support for JPEG image conversion.
			Requires libjpeg from the Independent JPEG Group.
			Get it from the XEmacs FTP site.
--with-png (*)		Compile with support for PNG image conversion.
			Requires libpng.  Get it from the XEmacs FTP site.
--with-tiff (*)		Compile with support for TIFF image conversion.
			Requires Sam Lefflier's libtiff library.
			Get if from the XEmacs FTP site.


TTY options:

--without-tty		Don't support TTY-s.
--with-ncurses (*)	Use the ncurses library for tty support.
--with-gpm (*) 		Compile in support for General Purpose Mouse.


Additional features:

--with-tooltalk (*)	Support the ToolTalk IPC protocol.
--with-workshop		Support the Sun WorkShop (formerly Sparcworks)
			development environment.
--with-socks		Compile with support for SOCKS (an Internet proxy).
--with-database=TYPE (*) Compile with database support.  Valid types are
			`no' or a comma-separated list of one or more
			of `dbm', `gnudbm', or `berkdb'.
--with-sound=native (*)	Compile with native sound support.
--with-sound=nas	Compile with network sound support.
--with-sound=both	Compile with native and network sound support.
--native-sound-lib=LIB	Native sound support library.  Needed on Suns
			with --with-sound=both because both sound libraries
			are called libaudio.
--with-pop		support POP for mail retrieval
--with-kerberos		support Kerberos-authenticated POP
--with-hesiod		support Hesiod to get the POP server host
--with-dnet (*)		Compile with support for DECnet.
--with-ldap (*)         Compile with support for the LDAP protocol (requires
                        installed LDAP libraries on the system).
--mail-locking=TYPE (*)	Specify the locking to be used by movemail to prevent
			concurrent updates of mail spool files. Valid types
			are `lockf', `flock', and `file'.
--with-site-lisp        Allow for a site-lisp directory in the XEmacs hierarchy 
			searched before the installation packages.
--package-path=PATH     Directories to search for packages to dump with xemacs.
                        PATH splits into three parts separated
                        by double colons (::), an early, a late, and a last part,
                        corresponding to their position in the various
                        system paths:  The early part is always first, 
                        the late part somewhere in the middle, and the 
                        last part at the very back.
                        Only the late part gets seen at dump time.
                        If PATH has only one component, that component 
                        is late.
                        If PATH has two components, the first is
                        early, the second is late.
--infodir=DIR		Directory to install the XEmacs Info manuals and dir in.
--infopath=PATH		Directories to search for Info documents, info dir
			and localdir files in case run-time searching
                        for them fails.

Internationalization options:

--with-mule		Compile with Mule (MUlti-Lingual Emacs) support,
			needed to support non-Latin-1 (including Asian) languages.
--with-xim=xlib		Compile with support for X input methods,
--with-xim=motif (*)	Used in conjunction with Mule support.
			Use either raw Xlib to provide XIM support, or
			the Motif XmIm* routines (when available).
			NOTE:  On some systems bugs in X11's XIM support
			will cause XEmacs to crash, so by default,
			no XIM support is compiled in, unless running
			on Solaris and the XmIm* routines are detected.
--with-canna (*)	Compile with support for Canna (a Japanese input method
			used in conjunction with Mule support).
--with-wnn (*)		Compile with support for WNN (a multi-language input method
			used in conjunction with Mule support).
--with-wnn6 (*)		Compile with support for the comercial package WNN version 6
--with-i18n3		Compile with I18N level 3 (support for message
			translation).  This doesn't currently work.
--with-xfs		Compile with XFontSet support for bilingual menubar.
			Can't use this option with --with-xim=motif or xlib.
			And should have --with-menubars=lucid.


Debugging options:

--debug			Compile with support for debugging XEmacs.
			(Causes code-size increase and little loss of speed.)
--error-checking=TYPE[,TYPE]...
			Compile with internal error-checking added.
			Causes noticeable loss of speed.  Valid types
			are extents, bufpos, malloc, gc, typecheck.
--error-checking=none	Disable all internal error-checking (the default).
--error-checking=all	Enable all internal error-checking.
--memory-usage-stats 	Compile with additional code to allow you to
			determine what XEmacs's memory is being used
		        for.  Causes a small code increase but no loss
			of speed.  Normally enabled when --debug is given.
--no-doc-file		Don't rebuild the DOC file unless it's explicitly
			deleted.  Only use during development. (It speeds
			up the compile-run-test cycle.)
--use-union-type	Enable or disable use of a union, instead of an
			int, for the fundamental Lisp_Object type; this
			provides stricter type-checking.  Only works with
			some systems and compilers.


Other options:

--puresize=VALUE	Override default amount of space for pure Lisp code.
--rel-alloc		Use the relocating allocator (default for this option
  			is system-dependent).
--with-dlmalloc		Control usage of Doug Lea malloc on systems that have
			it in the standard C library (default is to use it if
			it is available).
--with-clash-detection	Use lock files to detect multiple edits of the same file.
			The default is to not do clash detection.
--lockdir=DIR		The directory to put clash detection files in, such as
			`/var/lock/emacs'.
    Defaults to `${statedir}/xemacs/lock'.
--with-system-malloc	Force use of the system malloc, rather than GNU malloc.
--with-debug-malloc	Use the debugging malloc package.

You may also specify any of the `path' variables found in Makefile.in,
including --bindir, --libdir, --lispdir, --sitelispdir, --datadir,
--infodir, --mandir and so on.  Note that we recommend against
explicitly setting any of these variables.  See the INSTALL file for a
complete list plus the reasons we advise not changing them.

If successful, configure leaves its status in config.status.  If
unsuccessful after disturbing the status quo, it removes config.status.

The configure script also recognizes some environment variables, each
of which is equivalent to a corresponding configure flag.  A specified
configure flag always overrides the environment variable.

envvar      configure flag
-----       --------------
CC          --compiler
CPP         --cpp
CFLAGS      --cflags
CPPFLAGS    --cppflags
LDFLAGS     --ldflags
LIBS        --libs
LD_RUN_PATH --site-runtime-libraries

For more details on the install process, consult the INSTALL file.
